//24.12.26
//설계:
//구현:
//타일링이면 dp인가
class Solution {
    public int solution(int n, int[] tops) {
        int answer = 0;
        //0~N까지 꼭짓점(사다리꼴 윗면 삼각형)을 포함하는 타일링 경우의 수
        //현재 타일링에 \\모양 마름모가 사용되었다면(1) 다음 타일링에는 //마름모 사용 불가. -> +2(+1)
        //현재 타일링에 \\마름모가 사용되지 않았다면(0) 다음 타일링에 영향 없음. -> +3(+1)
        int[][] dp = new int[n+1][2];
        
        //i=0 왼쪽 아래 삼각형 채우는 경우만 존재
        dp[0][1] = 1;
        
        dp[1][0] = tops[0]+2;
        dp[1][1] = 1;
        for(int i = 2; i < n+1; i++){
            dp[i][0] = ((dp[i-1][0]*(2+tops[i-1]))%10007+(dp[i-1][1]*(1+tops[i-1]))%10007)%10007;
            dp[i][1] = (dp[i-1][0]+dp[i-1][1])%10007;
        }
        answer = (dp[n][0]+dp[n][1])%10007;
        return answer;
    }
}