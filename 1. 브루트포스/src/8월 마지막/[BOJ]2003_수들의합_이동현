//0.5초를 보고 일반적인 재귀는 무조건 시간초과 날 것 같았다. 
//다른 방법은? 투포인터 알고리즘을 사용 

package new1;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main1 {
	static int n, m, sum, cnt;
	static int arr[];

	public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        StringTokenizer st = new StringTokenizer(br.readLine());
        n = Integer.parseInt(st.nextToken()); // 수열의 개수
        m = Integer.parseInt(st.nextToken()); // 부분 수열의 합이 될 값
        arr = new int[n];
        sel = new boolean[n];
        
        st = new StringTokenizer(br.readLine());
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(st.nextToken());
        }
        
        int cnt = 0;
        int left = 0; 
        int right = 0;
        sum = arr[left];
        while(left < n) {
        	if(sum >= m) {
        		
        		if(sum == m)cnt++;
        	}
        	sum -= arr[left];
        	left++;
        }else { 
	}
}
